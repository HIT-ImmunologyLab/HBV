#Data analysis for Spatial Transcriptome data (edit by ccg)
# 1:Analysis for fastq file
spaceranger count --id="IT-A-A2" \
                  --description="IT-A-A2" \
                  --transcriptome=path to genome reference file/refdata-gex-GRCh38-2020-A \
                  --fastqs=path to fastq file/IT-A-A2 \
                  --image=path to image file/D.vmic.15139.tif \
                  --slide=V11Y10-019-D1 \
                  --area=C1 \
                  --localcores=60 \
                  --localmem=500

#2:Annotation for Spatial Transcriptome data
library(SeuratData)
library(Seurat)
library(ggplot2)
library(patchwork)
library(dplyr)
library(Cairo)

#import count files generated by 'spaceranger count'
setwd('path to count files')
IT <- Seurat::Load10X_Spatial(data.dir = "./IT/outs",slice='IT')
IT$orig.ident <- 'IT'
Idents(IT) <- IT$orig.ident
IC <- Seurat::Load10X_Spatial(data.dir = "./IC/outs",slice='IC')
IC$orig.ident <- 'IC'
Idents(IC) <- IC$orig.ident
AHB <- Seurat::Load10X_Spatial(data.dir = "./AHB/outs",slice='AHB')
AHB$orig.ident <- 'AHB'
Idents(AHB) <- AHB$orig.ident
IA <- Seurat::Load10X_Spatial(data.dir = "./IA/outs",slice='IA')
IA$orig.ident <- 'IA'
Idents(IA) <- IA$orig.ident

#normalization
IT <- SCTransform(IT, assay = "Spatial", verbose = FALSE) %>% RunPCA(verbose = FALSE)
IC <- SCTransform(IC, assay = "Spatial", verbose = FALSE) %>% RunPCA(verbose = FALSE)
AHB<- subset(AHB, subset = nCount_Spatial > 0)
AHB <- SCTransform(AHB, assay = "Spatial", verbose = FALSE) %>% RunPCA(verbose = FALSE)
IA<- subset(IA, subset = nCount_Spatial > 0)
IA <- SCTransform(IA, assay = "Spatial", verbose = FALSE) %>% RunPCA(verbose = FALSE)

#add sample name
IT$sample_name <- '0'
IT_path <- 'path to result saving dir'
cell_names <- rownames(subset(IT@images$IT@coordinates,imagecol> 1 & imagecol < 6000))
IT_cc <- subset(IT,cells=cell_names)
file_path <- paste0(IT_path,'IT_cc_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(IT_cc, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
IT@meta.data[cell_names,'sample_name'] <- 'IT_cc'

cell_names <- rownames(subset(IT@images$IT@coordinates,imagecol> 6000 & imagecol < 9000))
IT_lxy <- subset(IT,cells=cell_names)
file_path <- paste0(IT_path,'IT_lxy_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(IT_lxy, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
IT@meta.data[cell_names,'sample_name'] <- 'IT_lxy'

cell_names <- rownames(subset(IT@images$IT@coordinates,imagecol> 9000 & imagecol < 13000))
IT_hyj <- subset(IT,cells=cell_names)
file_path <- paste0(IT_path,'IT_hyj_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(IT_hyj, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
IT@meta.data[cell_names,'sample_name'] <- 'IT_hyj'

IC$sample_name <- '0'
IC_path <- 'path to result saving dir'
cell_names <- rownames(subset(IC@images$IC@coordinates,imagecol> 1 & imagecol < 6000))
IC_ysc <- subset(IC,cells=cell_names)
file_path <- paste0(IC_path,'IC_ysc_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(IC_ysc, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
IC@meta.data[cell_names,'sample_name'] <- 'IC_ysc'

cell_names <- rownames(subset(IC@images$IC@coordinates,imagecol> 6000 & imagecol < 9000))
IC_gjt <- subset(IC,cells=cell_names)
file_path <- paste0(IC_path,'IC_gjt_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(IC_gjt, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
IC@meta.data[cell_names,'sample_name'] <- 'IC_gjt'

cell_names <- rownames(subset(IC@images$IC@coordinates,imagecol> 9000 & imagecol < 13000))
IC_wxm <- subset(IC,cells=cell_names)
file_path <- paste0(IC_path,'IC_wxm_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(IC_wxm, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
IC@meta.data[cell_names,'sample_name'] <- 'IC_wxm'

AHB$sample_name <- '0'
AHB_path <- 'path to result saving dir'
cell_names <- rownames(subset(AHB@images$AHB@coordinates,imagecol> 1 & imagecol < 5000))
AHB_slp <- subset(AHB,cells=cell_names)
file_path <- paste0(AHB_path,'AHB_slp_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(AHB_slp, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
AHB@meta.data[cell_names,'sample_name'] <- 'AHB_slp'

cell_names <- rownames(subset(AHB@images$AHB@coordinates,imagecol> 5000 & imagecol < 9000))
AHB_thl <- subset(AHB,cells=cell_names)
file_path <- paste0(AHB_path,'AHB_thl_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(AHB_thl, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
AHB@meta.data[cell_names,'sample_name'] <- 'AHB_thl'

cell_names <- rownames(subset(AHB@images$AHB@coordinates,imagecol> 9000 & imagecol < 13000))
AHB_cy <- subset(AHB,cells=cell_names)
file_path <- paste0(AHB_path,'AHB_cy_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(AHB_cy, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
AHB@meta.data[cell_names,'sample_name'] <- 'AHB_cy'

IA$sample_name <- '0'
IA_path <- 'path to result saving dir'
cell_names <- rownames(subset(IA@images$IA@coordinates,imagecol> 1 & imagecol < 4500))
IA_xhl <- subset(IA,cells=cell_names)
file_path <- paste0(IA_path,'IA_xhl_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(IA_xhl, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
IA@meta.data[cell_names,'sample_name'] <- 'IA_xhl'

cell_names <- rownames(subset(IA@images$IA@coordinates,imagecol> 4500 & imagecol < 9000))
IA_sxh <- subset(IA,cells=cell_names)
file_path <- paste0(IA_path,'IA_sxh_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(IA_sxh, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
IA@meta.data[cell_names,'sample_name'] <- 'IA_sxh'

cell_names <- rownames(subset(IA@images$IA@coordinates,imagecol> 9000 & imagecol < 14000))
IA_zly <- subset(IA,cells=cell_names)
file_path <- paste0(IA_path,'IA_zly_umap_spatial_dimplot.png')
plot2 <- SpatialDimPlot(IA_zly, crop = FALSE, label = TRUE, pt.size.factor = 1, label.size = 2)
ggsave(filename = file_path, plot = plot2, width = 10, height = 10, units = 'cm',limitsize = FALSE)
IA@meta.data[cell_names,'sample_name'] <- 'IA_zly'

hbv_spatial_list <- list('AHB'=AHB,'IA'=IA,'IC'=IC,'IT'=IT)

#load reference scRNA-seq data
liver_all_filter <- readRDS('path to reference scRNA-seq data/liver_all_filter.rds')

#cell type annotation
set.seed(123)
liver_all_filter_ref <- liver_all_filter
Idents(liver_all_filter_ref) <- liver_all_filter_ref$celltype_final2
liver_all_filter_ref <- SCTransform(liver_all_filter_ref, ncells = 5000, verbose = FALSE) %>% RunPCA(verbose = FALSE) %>% RunUMAP(dims = 1:50)

predictions <- list()
predictions_rename <- list()
cell_num_path <- '/newdata/Single_cell_multi_omics_analysis/spatial_transcriptome/analysis_2022_10_10/cluster_annotation/celltype_plot_gzmb/'
for(i in 1:length(hbv_spatial_list)){
	DefaultAssay(hbv_spatial_list[[i]]) <- "SCT"
	anchors <- FindTransferAnchors(reference = liver_all_filter_ref, query = hbv_spatial_list[[i]], normalization.method = "SCT",dims=1:50)
	#predictions_assay <- TransferData(anchorset = anchors, refdata = liver_all_filter_ref$celltype_final, prediction.assay = TRUE, weight.reduction = AHB[["pca"]],dims=1:30)
	predictions[[i]] <- TransferData(anchorset = anchors, refdata = liver_all_filter_ref$celltype_final2, prediction.assay = FALSE,weight.reduction = hbv_spatial_list[[i]][["pca"]], dims = 1:50)
	predic_mtrx <- as.data.frame(predictions[[i]])
	hbv_spatial_list[[i]]$seurat_celltype_all_new_2 <- predic_mtrx$predicted.id
	
	predictions_rename[[i]] <- predictions[[i]]
	predictions_rename[[i]] <- predictions_rename[[i]][,-c(1,dim(predictions[[i]])[2])]
	colnames(predictions_rename[[i]]) <- gsub('prediction.score.','',colnames(predictions_rename[[i]]))
	colnames(predictions_rename[[i]]) <- gsub('\\.',' ',colnames(predictions_rename[[i]]))
	seurat_second_celltype <- apply(predictions_rename[[i]], 1, function(t) colnames(predictions_rename[[i]])[order(t,decreasing=TRUE)[2]])
	hbv_spatial_list[[i]]$seurat_celltype_all_new_2_wei2 <- seurat_second_celltype
	seurat_third_celltype <- apply(predictions_rename[[i]], 1, function(t) colnames(predictions_rename[[i]])[order(t,decreasing=TRUE)[3]])
	hbv_spatial_list[[i]]$seurat_celltype_all_new_2_wei3 <- seurat_third_celltype
}


